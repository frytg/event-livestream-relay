user root;
worker_processes auto;
rtmp_auto_push on;

error_log  /tmp/log/nginx/info.log info;

events {}

rtmp {
    server {
        listen 1935;
        listen [::]:1935 ipv6only=on; 

        chunk_size 8192;
        buflen 10s;   

        # Simple pass mode
        application rtmp-pass {
            live on;
            record off;
            meta copy;
            wait_key on;
            wait_video on;
        }

        # Conversion to fixed bandwidth
        application encoder-ingest {
            live on;
            record off;
            meta copy;
            wait_key on;
            wait_video on;


            exec_options on;

            exec_push /usr/bin/ffmpeg -re -i "rtmp://localhost:1935/$app/$name" -f flv -hwaccel cuvid -vsync 1 -c:v h264_nvenc -profile:v high -preset medium -b:v 5500K -acodec copy -report "rtmp://localhost:1935/encoder-output/$name" 2>>/tmp/log/ffmpeg/ffmpeg_$name.log;

            exec_publish echo $(date -u +%FT%T%z) "encoder-ingest > publish ${app} ${name}, ${addr}" >> /tmp/log/exec.log;
            exec_publish_done echo $(date -u +%FT%T%z) "encoder-ingest > publish_done ${app} ${name}, ${addr}" >> /tmp/log/exec.log;
           
            exec_play echo $(date -u +%FT%T%z) "encoder-ingest > play ${app} ${name}, ${addr}, ${pageurl}" >> /tmp/log/exec.log;
            exec_play_done echo $(date -u +%FT%T%z) "encoder-ingest > play ${app} ${name}, ${addr}, ${pageurl}" >> /tmp/log/exec.log;


            recorder rec1 {
                record all manual;
                record_path /tmp/rec/encoder-ingest;
                record_unique on;
                record_suffix _recorded.flv;
            }
        }

        # Receiver ingest for fixed bandwidth conversion
        application encoder-output {
            live on;
            record off;
            meta copy;
            wait_key on;
            wait_video on;


            exec_options on;

            exec_publish echo $(date -u +%FT%T%z) "encoder-output > publish ${app} ${name}, ${addr}" >> /tmp/log/exec.log;
            exec_publish_done echo $(date -u +%FT%T%z) "encoder-output > publish_done ${app} ${name}, ${addr}" >> /tmp/log/exec.log;
           
            exec_play echo $(date -u +%FT%T%z) "encoder-output > play ${app} ${name}, ${addr}, ${pageurl}" >> /tmp/log/exec.log;
            exec_play_done echo $(date -u +%FT%T%z) "encoder-output > play ${app} ${name}, ${addr}, ${pageurl}" >> /tmp/log/exec.log;


            recorder rec1 {
                record all manual;
                record_path /tmp/rec/encoder-output;
                record_unique on;
                record_suffix _recorded.flv;
            }


            dash on;
            dash_path /tmp/dash;
            dash_fragment 15s;
            dash_playlist_length 1m;
            dash_cleanup on;


            hls on;
            hls_path /tmp/hls/encoder-output/;
            hls_fragment 15s;
            hls_playlist_length 1m;
            hls_continuous on;
            hls_cleanup on;
        }

        # Simple pass mode with hls
        application hls-pass {
            live on;
            record off;
            meta copy;
            wait_key on;
            wait_video on;


            exec_options on;

            exec_publish echo $(date -u +%FT%T%z) "hls-pass > publish ${app} ${name}, ${addr}" >> /tmp/log/exec.log;
            exec_publish_done echo $(date -u +%FT%T%z) "hls-pass > publish_done ${app} ${name}, ${addr}" >> /tmp/log/exec.log;
           
            exec_play echo $(date -u +%FT%T%z) "hls-pass > play ${app} ${name}, ${addr}, ${pageurl}" >> /tmp/log/exec.log;
            exec_play_done echo $(date -u +%FT%T%z) "hls-pass > play ${app} ${name}, ${addr}, ${pageurl}" >> /tmp/log/exec.log;


            recorder rec1 {
                record all manual;
                record_path /tmp/rec/hls-pass;
                record_unique on;
                record_suffix _recorded.flv;
            }


            hls on;
            hls_path /tmp/hls/pass/;
            hls_fragment 15s;
            hls_playlist_length 1m;
            hls_continuous on;
            hls_cleanup on;
        }
    }
}

http {
    server {
        listen 8080;
        autoindex on;
        root /tmp/;

        # Provide server stats with html template
        location /stats {
            rtmp_stat all;
            rtmp_stat_stylesheet /stat.xsl;
        }

        # Provide server stats in xml format
        location /stats.xml {
            rtmp_stat all;
        }

        # Provide control to rtmp module
        location /control {
            rtmp_control all;
        }

        # provide dash stream access
        location /dash {
            add_header Cache-Control no-cache;

            # To avoid issues with cross-domain HTTP requests (e.g. during development)
            add_header Access-Control-Allow-Origin *;
        }

        # provide hls stream access
        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            add_header Cache-Control no-cache;
        }

    }
}